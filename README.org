* Guix Systems
** Boombaclaat
*** Harddisk

List disk partitions.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  fdisk -l /dev/nvme0n1
#+end_src

#+RESULTS:
#+begin_example
Disk /dev/nvme0n1: 1.82 TiB, 2001111162880 bytes, 488552530 sectors
Disk model: APPLE SSD AP2048R
Units: sectors of 1 * 4096 = 4096 bytes
Sector size (logical/physical): 4096 bytes / 4096 bytes
I/O size (minimum/optimal): 4096 bytes / 4096 bytes
Disklabel type: gpt
Disk identifier: A67A7E47-AE3F-436F-9BF7-9DCBCB1151C5

Device             Start       End   Sectors   Size Type
/dev/nvme0n1p1         6    128005    128000   500M Apple Silicon boot
/dev/nvme0n1p2    128006  24542067  24414062  93.1G Apple APFS
/dev/nvme0n1p3  24542068  25152371    610304   2.3G Apple APFS
/dev/nvme0n1p4  25152372  25274483    122112   477M EFI System
/dev/nvme0n1p5  25274484  61163123  35888640 136.9G Linux filesystem
/dev/nvme0n1p6  61163124  61773427    610304   2.3G Apple APFS
/dev/nvme0n1p7  61773428  61895539    122112   477M EFI System
/dev/nvme0n1p8 487241816 488552524   1310709     5G Apple Silicon recovery
/dev/nvme0n1p9  61895680 464548863 402653184   1.5T Linux filesystem

Partition table entries are not in disk order.
#+end_example

Create the LUKS encrypted container in partition =/dev/nvme0n1p9=.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  cryptsetup luksFormat --label cryptroot --type luks1 /dev/nvme0n1p9
#+end_src

Open the LUKS partition.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  cryptsetup luksOpen /dev/nvme0n1p9 cryptroot
#+end_src

List the UUIDs of the partitions.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  blkid
#+end_src

#+begin_example
/dev/nvme0n1p7: LABEL_FATBOOT="EFI - UEFI" LABEL="EFI - UEFI" UUID="88A6-151E" BLOCK_SIZE="4096" TYPE="vfat" PARTUUID="8df61a9f-b7a6-4899-8994-8b29b3063070"
/dev/nvme0n1p5: LABEL="asahi-root" UUID="e3b4a97a-3c20-4a0b-bbb0-dc6df7fb471f" BLOCK_SIZE="4096" TYPE="ext4" PARTUUID="9b31d9a1-e97e-4535-9557-2ff3d1de9282"
/dev/nvme0n1p3: UUID="7326ff33-6529-4ba7-95b3-f7d3a63da020" BLOCK_SIZE="4096" TYPE="apfs" PARTUUID="9623a60b-b8a6-4dbe-925a-4a95b75bc0e2"
/dev/nvme0n1p1: UUID="743ec7b4-1da1-4d90-a575-1b2e149c999d" BLOCK_SIZE="4096" TYPE="apfs" PARTLABEL="iBootSystemContainer" PARTUUID="5eb3f5e3-071e-4fac-be15-232d314b9c94"
/dev/nvme0n1p8: UUID="50df1db6-e408-463a-a121-7ba8203da3c5" BLOCK_SIZE="4096" TYPE="apfs" PARTLABEL="RecoveryOSContainer" PARTUUID="c7f84b19-2d15-4e82-b23d-9bead07f7570"
/dev/nvme0n1p6: UUID="6c210cae-f52b-48de-9a42-3cd69772d63d" BLOCK_SIZE="4096" TYPE="apfs" PARTUUID="790c16b9-d194-4b11-837e-6218d8248762"
/dev/nvme0n1p4: LABEL_FATBOOT="EFI - ASAHI" LABEL="EFI - ASAHI" UUID="3005-8D20" BLOCK_SIZE="4096" TYPE="vfat" PARTUUID="118b37ff-b0c6-46e1-a038-cd46fd3b53a1"
/dev/nvme0n1p2: UUID="f7040a26-c920-451c-9f01-9850f32725c6" BLOCK_SIZE="4096" TYPE="apfs" PARTLABEL="Container" PARTUUID="03752c1b-d126-4932-9be0-838f12ab4086"
/dev/nvme0n1p9: UUID="fd5a6979-eb43-4ffb-ad66-f75a191153ce" TYPE="crypto_LUKS" PARTUUID="c4529734-f3c3-ee41-b47e-0403ff61cb9c"
#+end_example

Create a physical volume in the partition.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  pvcreate /dev/mapper/cryptroot
#+end_src

#+RESULTS:
:   Physical volume "/dev/mapper/cryptroot" successfully created.

Create a volume group in the physical volume, named =bombaclaat=.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  vgcreate bombaclaat /dev/mapper/cryptroot
#+end_src

#+RESULTS:
:   Volume group "bombaclaat" successfully created

Create a logical volume for the swap partition.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  lvcreate --size 34G bombaclaat --name swap
#+end_src

#+RESULTS:
:   Logical volume "swap" created.

Create a logical volume for the =root= partition.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  lvcreate -l 100%FREE bombaclaat --name root
#+end_src

#+RESULTS:
:   Logical volume "root" created.

Format the filesystem and swap partitions.

#+begin_src sh :exports both :dir /sudo:: :results silent
  mkfs.ext4 -L root /dev/bombaclaat/root
  mkswap --label swap /dev/bombaclaat/swap
#+end_src

#+RESULTS:
#+begin_example
Creating filesystem with 346029056 4k blocks and 86507520 inodes
Filesystem UUID: 8842a70f-fdc3-40e0-aa81-66940ddb32c3
Superblock backups stored on blocks:
	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
	4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968,
	102400000, 214990848

Allocating group tables:     0/10560           done
Writing inode tables:     0/10560           done
Creating journal (262144 blocks): done
Writing superblocks and filesystem accounting information:     0/10560           done

Creating filesystem with 52428800 4k blocks and 13107200 inodes
Filesystem UUID: ecdf5cce-f306-4165-864c-49e2518c1619
Superblock backups stored on blocks:
	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
	4096000, 7962624, 11239424, 20480000, 23887872

Allocating group tables:    0/1600         done
Writing inode tables:    0/1600         done
Creating journal (262144 blocks): done
Writing superblocks and filesystem accounting information:    0/1600         done

Setting up swapspace version 1, size = 16 GiB (17179852800 bytes)
LABEL=swap, UUID=cf679d9a-9498-42c9-84ea-c21f14601c25
#+end_example

*** File systems

Mount the filesystems.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  mount /dev/bombaclaat/root /mnt
  mount --mkdir /dev/nvme0n1p7 /mnt/boot/efi
  swapon /dev/bombaclaat/swap
#+end_src

#+RESULTS:

Unmount the filesystems.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  swapoff /dev/bombaclaat/swap
  umount /mnt/boot/efi
  umount /mnt
#+end_src

*** Image

Build the Guix installation image.

#+begin_src sh :exports both :results verbatim
  guix system image -L . --image-type=efi-raw --system=aarch64-linux r0man/guix/system/bombaclaat.scm
#+end_src

Or, build the image with the Guix time machine.

#+begin_src sh :exports both :results verbatim
  guix time-machine -C r0man/guix/system/channels.scm -- system image -L . --image-type=efi-raw --system=aarch64-linux r0man/guix/system/bombaclaat.scm
#+end_src

Write the image to the USB stick at =/dev/sda=.

#+begin_src sh :results verbatim
  sudo dd if=/gnu/store/65j2k2drs2pl6fngkpifwxffjsdsz0x6-disk-image of=/dev/sda bs=4M status=progress oflag=sync
#+end_src

*** System

Initialize the system using the mounted file systems in =/mnt=.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  guix system init -L . --system=aarch64-linux r0man/guix/system/bombaclaat.scm /mnt
#+end_src

Or, initialize the system with the Guix time machine.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  guix time-machine -C r0man/guix/system/channels.scm -- system init -L . --system=aarch64-linux r0man/guix/system/bombaclaat.scm /mnt
#+end_src

Copy the channels to =/mnt/etc/channels.scm=.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  cp r0man/guix/system/channels.scm /mnt/etc/channels.scm
#+end_src

#+RESULTS:

Copy the system configuration to =/mnt/etc/config.scm=.

#+begin_src sh :exports both :dir /sudo:: :results verbatim
  cp r0man/guix/system/bombaclaat.scm /mnt/etc/config.scm
#+end_src
